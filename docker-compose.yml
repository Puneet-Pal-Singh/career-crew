# docker-compose.yml

version: '3.8' # Specify compose file version

services:
  # Next.js Application Service
  app:
    container_name: careercrew_app # Optional: specific container name
    build:
      context: . # Use the Dockerfile in the current directory
      dockerfile: Dockerfile
      target: development # Explicitly use the 'development' stage from Dockerfile
    ports:
      - "3000:3000" # Map host port 3000 to container port 3000
    volumes:
      # Mount the entire project directory into the container's /app directory
      # This enables hot-reloading for code changes.
      - .:/app
      # Use a separate volume for node_modules to prevent host node_modules
      # from overwriting the container's node_modules installed in Dockerfile.
      - /app/node_modules
      # Persist Next.js build cache if needed
      - /app/.next
    env_file:
      - .env # Load environment variables from .env file
    depends_on:
      - db # Ensure 'db' service starts before 'app' service
    restart: unless-stopped # Restart policy
    networks:
      - careercrew_network # Connect to the custom network

  # PostgreSQL Database Service
  db:
    container_name: careercrew_db # Optional: specific container name
    image: postgres:15-alpine # Use official Postgres 15 image
    ports:
      # Map host port 5433 to container port 5432 to avoid conflicts
      # with any locally running Postgres instance on default port 5432.
      - "5433:5432"
    volumes:
      # Persist database data using a named volume
      - postgres_data:/var/lib/postgresql/data
    environment:
      # Load credentials from .env file
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    restart: unless-stopped # Restart policy
    networks:
      - careercrew_network # Connect to the custom network
    healthcheck: # Optional: Check if Postgres is ready
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

# Define Networks
networks:
  careercrew_network:
    driver: bridge # Default Docker bridge network

# Define Named Volumes
volumes:
  postgres_data: # Volume for persisting database data